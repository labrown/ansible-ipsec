#!/usr/sbin/setkey -f

{% set proto="any" %}
{% set cipher="aes-cbc" %}
{% set mac="hmac-sha256" %}

{# hex key legths must match cipher and MAC requirements #}
{% macro enc(host1, host2) %}  0x{{ [ ansible_managed, host1, host2, ipsec_secret, "ESP KEY" ] | join | hash('sha256') | truncate(32,true,end='')  }} {% endmacro %}
{% macro auth(host1, host2) %} 0x{{ [ ansible_managed, host1, host2, ipsec_secret, "MAC KEY" ] | join | hash('sha256') | truncate(64,true,end='')  }} {% endmacro %}
{% macro spi(host1, host2) %}  0x{{ [ ansible_managed, host1, host2, ipsec_secret, "SPI"     ] | join | hash('sha256') | truncate(6,true,end='')  }} {% endmacro %}
{% macro comp(host1, host2) %} 0x{{ [ ansible_managed, host1, host2, ipsec_secret, "IPCOMP"  ] | join | hash('sha256') | truncate(6,true,end='')  }} {% endmacro %}

# {{to_host}}
{% set local=hostvars[inventory_hostname]['ansible_default_ipv4']['address'] %}
{% set remote=hostvars[to_host]['ansible_default_ipv4']['address'] %}
# {{ [ ansible_managed, local, remote, ipsec_secret, "ESP KEY" ] | join(" - ")}}

# ESP {{local}} <-> {{remote}}
add {{local}} {{remote}} esp {{ spi(local,remote) }} 
    -E {{cipher}} {{ enc(local,remote) }} 
    -A {{mac}} {{ auth(local, remote) }} ;
add {{remote}} {{local}} esp {{ spi(remote,local) }} 
    -E {{cipher}} {{ enc(remote, local) }} 
    -A {{mac}} {{ auth(remote, local) }} ; 

# IPComp {{local}} <-> {{remote}}
add {{local}} {{remote}} ipcomp {{ comp(local, remote) }} -C deflate;
add {{remote}} {{local}} ipcomp {{ comp(remote, local) }} -C deflate;

# SPD for incoming and outgoing traffic with {{remote}}
spdadd {{local}} {{remote}} {{proto}} -P out ipsec 
    ipcomp/transport//use 
    esp/transport//require;
spdadd {{remote}} {{local}} {{proto}} -P in ipsec 
    ipcomp/transport//use 
    esp/transport//require;
